package auviotre.enigmatic.legacy.registries;

import auviotre.enigmatic.legacy.EnigmaticLegacy;
import auviotre.enigmatic.legacy.contents.item.amulets.AscensionAmulet;
import auviotre.enigmatic.legacy.contents.item.amulets.EldritchAmulet;
import auviotre.enigmatic.legacy.contents.item.amulets.EnigmaticAmulet;
import auviotre.enigmatic.legacy.contents.item.amulets.UnwitnessedAmulet;
import auviotre.enigmatic.legacy.contents.item.books.*;
import auviotre.enigmatic.legacy.contents.item.charms.*;
import auviotre.enigmatic.legacy.contents.item.etherium.EtheriumArmor;
import auviotre.enigmatic.legacy.contents.item.etherium.EtheriumHammer;
import auviotre.enigmatic.legacy.contents.item.etherium.EtheriumScythe;
import auviotre.enigmatic.legacy.contents.item.etherium.EtheriumSword;
import auviotre.enigmatic.legacy.contents.item.food.AstralFruit;
import auviotre.enigmatic.legacy.contents.item.food.ForbiddenFruit;
import auviotre.enigmatic.legacy.contents.item.food.UnholyGrail;
import auviotre.enigmatic.legacy.contents.item.generic.BaseCursedItem;
import auviotre.enigmatic.legacy.contents.item.generic.BaseItem;
import auviotre.enigmatic.legacy.contents.item.materials.AbyssalHeart;
import auviotre.enigmatic.legacy.contents.item.materials.EarthHeart;
import auviotre.enigmatic.legacy.contents.item.materials.EvilEssence;
import auviotre.enigmatic.legacy.contents.item.materials.TwistedHeart;
import auviotre.enigmatic.legacy.contents.item.misc.*;
import auviotre.enigmatic.legacy.contents.item.op.LootGenerator;
import auviotre.enigmatic.legacy.contents.item.op.TheJudgement;
import auviotre.enigmatic.legacy.contents.item.potions.*;
import auviotre.enigmatic.legacy.contents.item.rings.*;
import auviotre.enigmatic.legacy.contents.item.scrolls.*;
import auviotre.enigmatic.legacy.contents.item.spellstones.*;
import auviotre.enigmatic.legacy.contents.item.spellstones.other.Spellcore;
import auviotre.enigmatic.legacy.contents.item.spellstones.other.Spelltuner;
import auviotre.enigmatic.legacy.contents.item.tools.*;
import net.minecraft.world.item.ArmorItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.Rarity;
import net.neoforged.neoforge.registries.DeferredItem;
import net.neoforged.neoforge.registries.DeferredRegister;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Supplier;

public class EnigmaticItems {
    public static final List<DeferredItem<? extends Item>> TAB_ACCEPT_LIST = new ArrayList<>();
    public static final DeferredRegister.Items ITEMS = DeferredRegister.createItems(EnigmaticLegacy.MODID);
    public static final DeferredItem<TheAcknowledgment> THE_ACKNOWLEDGMENT = registerWithTab("the_acknowledgment", TheAcknowledgment::new);
    public static final DeferredItem<UnwitnessedAmulet> UNWITNESSED_AMULET = registerWithTab("unwitnessed_amulet", UnwitnessedAmulet::new);
    public static final DeferredItem<EnigmaticAmulet> ENIGMATIC_AMULET = ITEMS.register("enigmatic_amulet", () -> new EnigmaticAmulet());
    public static final DeferredItem<Item> SPELLSTONE_DEBRIS = registerWithTab("spellstone_debris", () -> new Item(BaseItem.defaultProperties(32).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Spellcore> SPELLCORE = registerWithTab("spellcore", Spellcore::new);
    public static final DeferredItem<Spelltuner> SPELLTUNER = registerWithTab("spelltuner", Spelltuner::new);
    public static final DeferredItem<GolemHeart> GOLEM_HEART = registerWithTab("golem_heart", GolemHeart::new);
    public static final DeferredItem<BlazingCore> BLAZING_CORE = registerWithTab("blazing_core", BlazingCore::new);
    public static final DeferredItem<OceanStone> OCEAN_STONE = registerWithTab("ocean_stone", OceanStone::new);
    public static final DeferredItem<AngelBlessing> ANGEL_BLESSING = registerWithTab("angel_blessing", AngelBlessing::new);
    public static final DeferredItem<EyeOfNebula> EYE_OF_NEBULA = registerWithTab("eye_of_nebula", EyeOfNebula::new);
    public static final DeferredItem<VoidPearl> VOID_PEARL = registerWithTab("void_pearl", VoidPearl::new);
    public static final DeferredItem<ForgottenIce> FORGOTTEN_ICE = registerWithTab("forgotten_ice", ForgottenIce::new);
    public static final DeferredItem<RevivalLeaf> REVIVAL_LEAF = registerWithTab("revival_leaf", RevivalLeaf::new);
    public static final DeferredItem<LostEngine> LOST_ENGINE = registerWithTab("lost_engine", LostEngine::new);
    // Re-roller
    public static final DeferredItem<TheCube> THE_CUBE = registerWithTab("the_cube", TheCube::new);
    public static final DeferredItem<EtheriumCore> ETHERIUM_CORE = registerWithTab("etherium_core", EtheriumCore::new);
    public static final DeferredItem<IronRing> IRON_RING = registerWithTab("iron_ring", IronRing::new);
    public static final DeferredItem<GoldenRing> GOLDEN_RING = registerWithTab("golden_ring", GoldenRing::new);
    public static final DeferredItem<MinerRing> MINER_RING = registerWithTab("miner_ring", MinerRing::new);
    public static final DeferredItem<MagnetRing> MAGNET_RING = registerWithTab("magnet_ring", MagnetRing::new);
    public static final DeferredItem<QuartzRing> QUARTZ_RING = registerWithTab("quartz_ring", QuartzRing::new);
    public static final DeferredItem<EnderRing> ENDER_RING = registerWithTab("ender_ring", EnderRing::new);
    public static final DeferredItem<DislocationRing> DISLOCATION_RING = registerWithTab("dislocation_ring", DislocationRing::new);
    public static final DeferredItem<Item> BLANK_SCROLL = registerWithTab("blank_scroll", () -> new Item(BaseItem.defaultProperties(16)));
    public static final DeferredItem<XpScroll> XP_SCROLL = registerWithTab("xp_scroll", XpScroll::new);
    public static final DeferredItem<HeavenScroll> HEAVEN_SCROLL = registerWithTab("heaven_scroll", HeavenScroll::new);
    public static final DeferredItem<FabulousScroll> FABULOUS_SCROLL = registerWithTab("fabulous_scroll", FabulousScroll::new);
    public static final DeferredItem<AnimalGuidebook> ANIMAL_GUIDEBOOK = registerWithTab("animal_guidebook", AnimalGuidebook::new);
    public static final DeferredItem<HunterGuidebook> HUNTER_GUIDEBOOK = registerWithTab("hunter_guidebook", HunterGuidebook::new);
    public static final DeferredItem<LivingOde> ODE_TO_LIVING = registerWithTab("ode_to_living", LivingOde::new);
    public static final DeferredItem<EnchantmentTransposer> ENCHANTMENT_TRANSPOSER = registerWithTab("enchantment_transposer", EnchantmentTransposer::new);
    public static final DeferredItem<RecallPotion> RECALL_POTION = registerWithTab("recall_potion", RecallPotion::new);
    public static final DeferredItem<WormholePotion> WORMHOLE_POTION = registerWithTab("wormhole_potion", WormholePotion::new);
    public static final DeferredItem<MendingMixture> MENDING_MIXTURE = registerWithTab("mending_mixture", MendingMixture::new);
    public static final DeferredItem<EarthHeart.Fragment> EARTH_HEART_FRAGMENT = registerWithTab("earth_heart_fragment", EarthHeart.Fragment::new);
    public static final DeferredItem<EarthHeart> EARTH_HEART = registerWithTab("earth_heart", EarthHeart::new);
    public static final DeferredItem<MiningCharm> MINING_CHARM = registerWithTab("mining_charm", MiningCharm::new);
    public static final DeferredItem<MonsterCharm> MONSTER_CHARM = registerWithTab("monster_charm", MonsterCharm::new);
    public static final DeferredItem<ExtradimensionalEye> EXTRADIMENSIONAL_EYE = registerWithTab("extradimensional_eye", ExtradimensionalEye::new);
    public static final DeferredItem<Infinimeal> INFINIMEAL = registerWithTab("infinimeal", Infinimeal::new);
    public static final DeferredItem<ExecutionAxe> EXECUTION_AXE = registerWithTab("execution_axe", ExecutionAxe::new);
    public static final DeferredItem<ForgerGem> FORGER_GEM = registerWithTab("forger_gem", ForgerGem::new);
    public static final DeferredItem<UnholyGrail> UNHOLY_GRAIL = registerWithTab("unholy_grail", UnholyGrail::new);
    public static final DeferredItem<VoidStone> VOID_STONE = registerWithTab("void_stone", VoidStone::new);
    public static final DeferredItem<Item> INFERNAL_CINDER = registerWithTab("infernal_cinder", () -> new Item(BaseItem.defaultProperties()));
    public static final DeferredItem<Item> ICHOR_DROPLET = registerWithTab("ichor_droplet", () -> new Item(BaseItem.defaultProperties()));
    public static final DeferredItem<ForbiddenFruit> FORBIDDEN_FRUIT = registerWithTab("forbidden_fruit", ForbiddenFruit::new);
    public static final DeferredItem<RedemptionPotion> REDEMPTION_POTION = registerWithTab("redemption_potion", RedemptionPotion::new);
    public static final DeferredItem<Item> LORE_INSCRIBER = registerWithTab("lore_inscriber", LoreInscriber::new);
    public static final DeferredItem<Item> LORE_FRAGMENT = registerWithTab("lore_fragment", LoreInscriber.Fragment::new);
    public static final DeferredItem<Item> ASTRAL_DUST = registerWithTab("astral_dust", () -> new Item(BaseItem.defaultProperties()));
    public static final DeferredItem<Item> ENDER_ROD = registerWithTab("ender_rod", () -> new Item(BaseItem.defaultProperties()));
    public static final DeferredItem<Item> COSMIC_HEART = registerWithTab("cosmic_heart", () -> new Item(BaseItem.defaultProperties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<AscensionAmulet> ASCENSION_AMULET = registerWithTab("ascension_amulet", AscensionAmulet::new);
    public static final DeferredItem<Item> RAW_ETHERIUM = registerWithTab("raw_etherium", () -> new Item(BaseItem.defaultProperties().fireResistant()));
    public static final DeferredItem<Item> ETHERIUM_INGOT = registerWithTab("etherium_ingot", () -> new Item(BaseItem.defaultProperties().fireResistant()));
    public static final DeferredItem<Item> ETHERIUM_NUGGET = registerWithTab("etherium_nugget", () -> new Item(BaseItem.defaultProperties().fireResistant()));
    public static final DeferredItem<EtheriumSword> ETHERIUM_SWORD = registerWithTab("etherium_sword", EtheriumSword::new);
    public static final DeferredItem<EtheriumHammer> ETHERIUM_HAMMER = registerWithTab("etherium_hammer", EtheriumHammer::new);
    public static final DeferredItem<EtheriumScythe> ETHERIUM_SCYTHE = registerWithTab("etherium_scythe", EtheriumScythe::new);
    public static final DeferredItem<EtheriumArmor> ETHERIUM_HELMET = registerWithTab("etherium_helmet", () -> new EtheriumArmor(ArmorItem.Type.HELMET));
    public static final DeferredItem<EtheriumArmor> ETHERIUM_CHESTPLATE = registerWithTab("etherium_chestplate", () -> new EtheriumArmor(ArmorItem.Type.CHESTPLATE));
    public static final DeferredItem<EtheriumArmor> ETHERIUM_LEGGINGS = registerWithTab("etherium_leggings", () -> new EtheriumArmor(ArmorItem.Type.LEGGINGS));
    public static final DeferredItem<EtheriumArmor> ETHERIUM_BOOTS = registerWithTab("etherium_boots", () -> new EtheriumArmor(ArmorItem.Type.BOOTS));
    public static final DeferredItem<MajesticElytra> MAJESTIC_ELYTRA = registerWithTab("majestic_elytra", MajesticElytra::new);
    public static final DeferredItem<DragonBreathBow> DRAGON_BREATH_BOW = registerWithTab("dragon_breath_bow", DragonBreathBow::new);
    public static final DeferredItem<IchorBottle> ICHOR_BOTTLE = registerWithTab("ichor_bottle", IchorBottle::new);
    public static final DeferredItem<CursedRing> CURSED_RING = registerWithTab("cursed_ring", CursedRing::new);
    public static final DeferredItem<TwistedHeart> TWISTED_HEART = registerWithTab("twisted_heart", TwistedHeart::new);
    public static final DeferredItem<AstralFruit> ASTRAL_FRUIT = registerWithTab("astral_fruit", () -> new AstralFruit(false));
    public static final DeferredItem<AstralFruit> ENCHANTED_ASTRAL_FRUIT = registerWithTab("enchanted_astral_fruit", () -> new AstralFruit(true));
    public static final DeferredItem<TwistedMirror> TWISTED_MIRROR = registerWithTab("twisted_mirror", TwistedMirror::new);
    public static final DeferredItem<InfernalShield> INFERNAL_SHIELD = registerWithTab("infernal_shield", InfernalShield::new);
    public static final DeferredItem<BerserkEmblem> BERSERK_EMBLEM = registerWithTab("berserk_emblem", BerserkEmblem::new);
    public static final DeferredItem<SoulCompass> SOUL_COMPASS = registerWithTab("soul_compass", SoulCompass::new);
    public static final DeferredItem<CursedStone> CURSED_STONE = registerWithTab("cursed_stone", CursedStone::new);
    public static final DeferredItem<Item> EVIL_ESSENCE = registerWithTab("evil_essence", EvilEssence::new);
    public static final DeferredItem<Item> EVIL_INGOT = registerWithTab("evil_ingot", () -> new BaseCursedItem(BaseItem.defaultProperties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<TheTwist> THE_TWIST = registerWithTab("the_twist", TheTwist::new);
    public static final DeferredItem<CurseTransposer> CURSE_TRANSPOSER = registerWithTab("curse_transposer", CurseTransposer::new);
    public static final DeferredItem<TotemOfMalice> TOTEM_OF_MALICE = registerWithTab("totem_of_malice", TotemOfMalice::new);
    public static final DeferredItem<EnchanterPearl> ENCHANTER_PEARL = registerWithTab("enchanter_pearl", EnchanterPearl::new);
    public static final DeferredItem<EnderSlayer> ENDER_SLAYER = registerWithTab("ender_slayer", EnderSlayer::new);
    public static final DeferredItem<Item> DARKEST_SCROLL = registerWithTab("darkest_scroll", () -> new Item(BaseItem.defaultProperties(16).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<NightScroll> NIGHT_SCROLL = registerWithTab("night_scroll", NightScroll::new);
    public static final DeferredItem<CursedScroll> CURSED_SCROLL = registerWithTab("cursed_scroll", CursedScroll::new);
    public static final DeferredItem<AvariceScroll> AVARICE_SCROLL = registerWithTab("avarice_scroll", AvariceScroll::new);
    public static final DeferredItem<CursedXpScroll> CURSED_XP_SCROLL = registerWithTab("cursed_xp_scroll", CursedXpScroll::new);
    public static final DeferredItem<AbyssalHeart> ABYSSAL_HEART = registerWithTab("abyssal_heart", AbyssalHeart::new);
    public static final DeferredItem<TheInfinitum> THE_INFINITUM = registerWithTab("the_infinitum", TheInfinitum::new);
    public static final DeferredItem<EldritchAmulet> ELDRITCH_AMULET = registerWithTab("eldritch_amulet", EldritchAmulet::new);
    public static final DeferredItem<DesolationRing> DESOLATION_RING = registerWithTab("desolation_ring", DesolationRing::new);
    public static final DeferredItem<ChaosElytra> CHAOS_ELYTRA = registerWithTab("chaos_elytra", ChaosElytra::new);
    public static final DeferredItem<SoulCrystal> SOUL_CRYSTAL = registerWithTab("soul_crystal", SoulCrystal::new);
    public static final DeferredItem<StorageCrystal> STORAGE_CRYSTAL = ITEMS.register("storage_crystal", StorageCrystal::new);
    public static final DeferredItem<CosmicScroll> COSMIC_SCROLL = ITEMS.register("cosmic_scroll", CosmicScroll::new);
    public static final DeferredItem<TheJudgement> THE_JUDGEMENT = ITEMS.register("the_judgement", TheJudgement::new);
    public static final DeferredItem<LootGenerator> LOOT_GENERATOR = ITEMS.register("loot_generator", LootGenerator::new);

    protected static <T extends Item> DeferredItem<T> registerWithTab(String id, Supplier<T> reg) {
        DeferredItem<T> register = ITEMS.register(id, reg);
        TAB_ACCEPT_LIST.add(register);
        return register;
    }
}
